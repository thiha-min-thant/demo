apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  creationTimestamp: null
  labels:
    infra_id: 2bcdb7c8-69e7-437a-bfe4-969639f23b0e
    revision_id: 364bde83-046b-4e4f-b3cd-ccd2807c3858
    workflow_id: a6a34252-76c2-4a79-a2e3-2fbf75ae95cd
    workflows.argoproj.io/controller-instanceid: 2bcdb7c8-69e7-437a-bfe4-969639f23b0e
  name: custom-two
  namespace: litmus-infra
spec:
  arguments:
    parameters:
    - name: adminModeNamespace
      value: litmus-infra
    - name: appNamespace
      value: default
  entrypoint: init-chaos
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
  serviceAccountName: argo-chaos
  templates:
  - inputs: {}
    metadata: {}
    name: init-chaos
    outputs: {}
    steps:
    - - arguments: {}
        name: install-chaos-faults
        template: install-chaos-faults
    - - arguments: {}
        name: run-chaos
        template: run-chaos
    - - arguments: {}
        name: cleanup-chaos-resources
        template: cleanup-chaos-resources
  - container:
      args:
      - kubectl apply -f /tmp/pod-delete.yaml -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: litmuschaos/k8s:latest
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: install-chaos-faults
        path: /tmp/pod-delete.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            description:
              message: |
                Deletes a pod belonging to a deployment/statefulset/daemonset
            kind: ChaosExperiment
            metadata:
              name: pod-delete
            spec:
              definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                      - "apps"
                      - "batch"
                      - "litmuschaos.io"
                    resources:
                      - "deployments"
                      - "jobs"
                      - "pods"
                      - "pods/log"
                      - "events"
                      - "configmaps"
                      - "chaosengines"
                      - "chaosexperiments"
                      - "chaosresults"
                    verbs:
                      - "create"
                      - "list"
                      - "get"
                      - "patch"
                      - "update"
                      - "delete"
                  - apiGroups:
                      - ""
                    resources:
                      - "nodes"
                    verbs:
                      - "get"
                      - "list"
                image: "litmuschaos.docker.scarf.sh/litmuschaos/go-runner:3.10.0"
                imagePullPolicy: Always
                args:
                - -c
                - ./experiments -name pod-delete
                command:
                - /bin/bash
                env:

                - name: TOTAL_CHAOS_DURATION
                  value: '15'

                # Period to wait before and after injection of chaos in sec
                - name: RAMP_TIME
                  value: ''

                # provide the kill count
                - name: KILL_COUNT
                  value: ''

                - name: FORCE
                  value: 'true'

                - name: CHAOS_INTERVAL
                  value: '5'

                labels:
                  name: pod-delete
    metadata: {}
    name: install-chaos-faults
    outputs: {}
  - container:
      args:
      - -file=/tmp/chaosengine.yaml
      - -saveName=/tmp/engine-name
      image: litmuschaos/litmus-checker:latest
      name: ""
      resources: {}
    inputs:
      artifacts:
      - name: run-chaos
        path: /tmp/chaosengine.yaml
        raw:
          data: |
            apiVersion: litmuschaos.io/v1alpha1
            kind: ChaosEngine
            metadata:
              namespace: "{{workflow.parameters.adminModeNamespace}}"
              labels:
                context: "{{workflow.parameters.appNamespace}}_demo-app"
                workflow_run_id: "{{ workflow.uid }}"
                workflow_name: custom-two
              annotations:
                probeRef: '[{"name":"demo-hpttd","mode":"EOT"}]'
                litmuschaos.io/gitops: "true"
                litmuschaos.io/experimentId: "{{ workflow.uid }}"
              generateName: run-chaos
            spec:
              appinfo:
                appns: kube-system
                applabel: k8s-app=kube-proxy
                appkind: daemonset
              jobCleanUpPolicy: retain
              engineState: active
              chaosServiceAccount: litmus-admin
              experiments:
                - name: pod-delete
                  spec:
                    components:
                      env:
                        - name: TOTAL_CHAOS_DURATION
                          value: "60"
                        - name: CHAOS_INTERVAL
                          value: "10"
                        - name: FORCE
                          value: "false"
    metadata:
      labels:
        weight: "10"
    name: run-chaos
    outputs: {}
  - container:
      args:
      - kubectl delete chaosengine -l workflow_run_id={{workflow.uid}} -n {{workflow.parameters.adminModeNamespace}}
      command:
      - sh
      - -c
      image: litmuschaos/k8s:latest
      name: ""
      resources: {}
    inputs: {}
    metadata: {}
    name: cleanup-chaos-resources
    outputs: {}
status:
  finishedAt: null
  startedAt: null
